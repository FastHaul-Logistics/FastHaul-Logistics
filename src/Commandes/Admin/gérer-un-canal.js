const { SlashCommandBuilder, EmbedBuilder, ChannelType, PermissionsBitField } = require('discord.js');
 
module.exports = {
    data: new SlashCommandBuilder()
    .setName('gÃ©rer-un-canal')
    .setDescription('CrÃ©er ou supprimer un canal.')
    .addSubcommand(command => command.setName('crÃ©er').setDescription('CrÃ©er un canal avec un nom spÃ©cifiÃ©.')
        .addStringOption(option => option.setName('nom').setDescription(`Le nom spÃ©cifiÃ© sera le nom de votre chaÃ®ne.`).setRequired(true).setMinLength(1).setMaxLength(100))
        .addChannelOption(option => option.setName('catÃ©gorie').setDescription(`La catÃ©gorie spÃ©cifiÃ©e sera la catÃ©gorie parent de votre canal.`).setRequired(false).addChannelTypes(ChannelType.GuildCategory).setRequired(true))
        .addStringOption(option => option.setName('type').setDescription('Le type spÃ©cifiÃ© sera votre type de canal.').addChoices(
            { name: `salon textuel`, value: `text` },
            { name: `canal vocal`, value: `voice`},
            { name: `Stage Channel`, value: `stage` }, 
            { name: `canal d'annonce`, value: `announcement` },
            { name: `Canal Forum`, value: `forum` }
        ).setRequired(true)))
    .addSubcommand(command => command.setName('supprimer').setDescription('Supprime le canal spÃ©cifiÃ©.').addChannelOption(option => option.setName('canal').setDescription('Le canal spÃ©cifiÃ© sera supprimÃ©.').setRequired(true).addChannelTypes(ChannelType.GuildAnnouncement, ChannelType.GuildCategory, ChannelType.GuildStageVoice, ChannelType.GuildVoice, ChannelType.GuildText, ChannelType.GuildForum)))
    .addSubcommand(command => command.setName('Ã©diter').setDescription('Supprime le canal spÃ©cifiÃ©.').addChannelOption(option => option.setName('canal').setDescription('Le canal spÃ©cifiÃ© sera modifiÃ©.').setRequired(true).addChannelTypes(ChannelType.GuildAnnouncement, ChannelType.GuildStageVoice, ChannelType.GuildVoice, ChannelType.GuildText, ChannelType.GuildForum, ChannelType.GuildCategory)).addStringOption(option => option.setName('new-name').setDescription(`Specified name will be your channel's new name.`).setMinLength(1).setMaxLength(100).setRequired(true))),
 
    async execute(interaction, err) {
 
        if (!interaction.member.permissions.has(PermissionsBitField.Flags.ManageChannels) && interaction.user.id !== '619944734776885276') return await interaction.reply({ content: 'Vous **nâ€™avez** pas la permission de le faire!', ephemeral: true});
        const sub = interaction.options.getSubcommand();
 
        switch (sub) {
            case 'crÃ©er':
 
            const name = await interaction.options.getString('nom');
            const category = await interaction.options.getChannel('catÃ©gorie');
            const type = await interaction.options.getString('type');
 
            if (type === 'text') {
 
                const channel = await interaction.guild.channels.create({
                    name: name,
                    type: ChannelType.GuildText,
                    parent: category.id
 
                }).catch(err => {
                    interaction.reply({ content: `**Impossible** de crÃ©er votre canal **${nom}**, veuillez vous assurer*** que jâ€™ai lâ€™autorisation **GÃ©rer les canaux**!`})
                });
 
                const channelembed = new EmbedBuilder()
                .setColor('#af00fe')
                .setAuthor({ name: `ðŸ“ƒ Outil de canal`})
                .setFooter({ text: `ðŸ“ƒ Canal crÃ©Ã©`})
                .setTitle('> Canal crÃ©Ã©')
                .addFields({ name: `â€¢ Canal crÃ©Ã©`, value: `> Votre canal (${channel}) a Ã©tÃ© crÃ©Ã© dans \n> la catÃ©gorie ${category}!`})
 
                await interaction.reply({ embeds: [channelembed]})
            }
 
            if (type === 'voice') {
 
                const channel = await interaction.guild.channels.create({
                    name: name,
                    type: ChannelType.GuildVoice,
                    parent: category.id
 
                }).catch(err => {
                    interaction.reply({ content: `**Impossible** de crÃ©er votre canal **${nom}**, veuillez vous assurer*** que jâ€™ai lâ€™autorisation **GÃ©rer les canaux**!`})
                });
 
                const channelembed = new EmbedBuilder()
                .setColor('#af00fe')
                .setTimestamp()
                .setThumbnail('https://cdn.discordapp.com/icons/1078641070180675665/c3ee76cdd52c2bba8492027dfaafa15d.webp?size=1024')
                .setAuthor({ name: `ðŸ“ƒ Outil de canal`})
                .setFooter({ text: `ðŸ“ƒ Canal crÃ©Ã©`})
                .setTitle('> Canal crÃ©Ã©')
                .addFields({ name: `â€¢ Canal crÃ©Ã©`, value: `> Votre canal (${channel}) a Ã©tÃ© crÃ©Ã© dans \n> la catÃ©gorie ${category}!`})
 
                await interaction.reply({ embeds: [channelembed]})
            }
 
            if (type === 'stage') {
 
                const channel = await interaction.guild.channels.create({
                    name: name,
                    type: ChannelType.GuildStageVoice,
                    parent: category.id
 
                }).catch(err => {
                    interaction.reply({ content: `**Impossible** de crÃ©er votre canal **${nom}**, veuillez vous assurer*** que jâ€™ai lâ€™autorisation **GÃ©rer les canaux**!`})
                });
 
                const channelembed = new EmbedBuilder()
                .setColor('#af00fe')
                .setTimestamp()
                .setThumbnail('https://cdn.discordapp.com/icons/1078641070180675665/c3ee76cdd52c2bba8492027dfaafa15d.webp?size=1024')
                .setAuthor({ name: `ðŸ“ƒ Outil de canal`})
                .setFooter({ text: `ðŸ“ƒ Canal crÃ©Ã©`})
                .setTitle('> Canal crÃ©Ã©')
                .addFields({ name: `â€¢ Canal crÃ©Ã©`, value: `> Votre canal (${channel}) a Ã©tÃ© crÃ©Ã© dans \n> la catÃ©gorie ${category}!`})
 
                await interaction.reply({ embeds: [channelembed]})
            }
 
            if (type === 'announcement') {
 
                const channel = await interaction.guild.channels.create({
                    name: name,
                    type: ChannelType.GuildAnnouncement,
                    parent: category.id
 
                }).catch(err => {
                    interaction.reply({ content: `**Impossible** de crÃ©er votre canal **${nom}**, veuillez vous assurer*** que jâ€™ai lâ€™autorisation **GÃ©rer les canaux**!`})
                });
 
                const channelembed = new EmbedBuilder()
                .setColor('#af00fe')
                .setTimestamp()
                .setThumbnail('https://cdn.discordapp.com/icons/1078641070180675665/c3ee76cdd52c2bba8492027dfaafa15d.webp?size=1024')
                .setAuthor({ name: `ðŸ“ƒ Outil de canal`})
                .setFooter({ text: `ðŸ“ƒ Canal crÃ©Ã©`})
                .setTitle('> Canal crÃ©Ã©')
                .addFields({ name: `â€¢ Canal crÃ©Ã©`, value: `> Votre canal (${channel}) a Ã©tÃ© crÃ©Ã© dans \n> la catÃ©gorie ${category}!`})
 
                await interaction.reply({ embeds: [channelembed]})
            }
 
            if (type === 'forum') {
 
                const channel = await interaction.guild.channels.create({
                    name: name,
                    type: ChannelType.GuildForum,
                    parent: category.id
 
                }).catch(err => {
                    interaction.reply({ content: `**Impossible** de crÃ©er votre canal **${nom}**, veuillez vous assurer*** que jâ€™ai lâ€™autorisation **GÃ©rer les canaux**!`})
                });
 
                const channelembed = new EmbedBuilder()
                .setColor('#af00fe')
                .setTimestamp()
                .setThumbnail('https://cdn.discordapp.com/icons/1078641070180675665/c3ee76cdd52c2bba8492027dfaafa15d.webp?size=1024')
                .setAuthor({ name: `ðŸ“ƒ Outil de canal`})
                .setFooter({ text: `ðŸ“ƒ Canal crÃ©Ã©`})
                .setTitle('> Canal crÃ©Ã©')
                .addFields({ name: `â€¢ Canal crÃ©Ã©`, value: `> Votre canal (${channel}) a Ã©tÃ© crÃ©Ã© dans \n> la catÃ©gorie ${category}`})
 
                await interaction.reply({ embeds: [channelembed]})
            }
 
            break;
            case 'supprimer':
 
            const channel = await interaction.options.getChannel('channel');
            const channeldelete = await interaction.guild.channels.cache.get(channel.id);
 
            const embed = new EmbedBuilder()
            .setColor("#af00fe")
            .setTitle('> Canal supprimÃ©')
            .setAuthor({ name: `ðŸ“ƒ Outil de canal`})
            .setFooter({ text: `ðŸ“ƒ Canal supprimÃ©`})
            .addFields({ name: `â€¢ Canal supprimÃ©`, value: `> Your channel (${channeldelete}) was deleted!`})
            .setTimestamp()
            .setThumbnail('https://cdn.discordapp.com/icons/1078641070180675665/c3ee76cdd52c2bba8492027dfaafa15d.webp?size=1024')
 
            await channeldelete.delete().catch(err => {
                return interaction.reply({ content: `**Impossible** de supprimer ce canal! VÃ©rifiez mes **autorisations** et rÃ©essayez.`})
            });
 
            await interaction.reply({ embeds: [embed] });
 
            break;
            case 'Ã©diter':
 
            const newname = await interaction.options.getString('new-name');
            const newchannel = await interaction.options.getChannel('channel');
            const updatedchannel = await interaction.guild.channels.cache.get(newchannel.id);
            const oldname = updatedchannel.name;
 
            const editembed = new EmbedBuilder()
            .setColor('#af00fe')
            .setAuthor({ name: `ðŸ“ƒ Outil de canal`})
            .setFooter({ text: `ðŸ“ƒ Canal modifiÃ©`})
            .setThumbnail('https://cdn.discordapp.com/icons/1078641070180675665/c3ee76cdd52c2bba8492027dfaafa15d.webp?size=1024')
            .setTimestamp()
            .addFields({ name: `â€¢ Canal modifiÃ©`, value: `> Nom du canal (${updatedchannel}) modifiÃ© \n> Ã  partir de "**${oldname}**" => "**${newname}**".`})
 
            updatedchannel.setName(newname).catch(err => {
                interaction.reply({ content: `**Impossible** de modifier le nom de ${updatedchannel}. VÃ©rifiez mes **autorisations** et rÃ©essayez.`});
            })
 
            await interaction.reply({ embeds: [editembed] });
        }
    }
}